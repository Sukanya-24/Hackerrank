1)Multiset Implementation:-
================================
class multiset(object):
  def __init__(self):
    self.items=[]
  def add(self,val):
    return self.items.append(val)

  def remove(self,val):
    if self.items.count(val)!=0:
     return self.items.remove(val)

  def __contains__(self,val):
    return val in self.items

  def __len__(self):
   return len(self.items)

2)Shape classes with Area Method:-
========================================
class rectangle:
  def __init__(self,length,breadth):
    self.length=length
    self.breadth=breadth
  def area(self):
    return self.length*self.breadth

class circle:
  def __init__(self,radius):
   self.radius=radius
  def area(self):
   return math.pi*(self.radius**2)

3)Average Function:-
========================
def avg(*nums):
 s=0
 for i in nums:
  s+=i
 return s/len(nums)

4)Reverse Words & Swap cases:-
========================================
def swap_case(word):
 return ''.join([ch.lower() if ch.isupper() else ch.upper for ch in word])

def reverse_words_order_and_swap_cases(sentence):
 words=sentence.split(' ')[::-1]
 return ' '.join([swap_case(word) for word in words])

5)String Representation of Objects:-
=======================================
class car:
 def __init__(self,max_speed,unit):
  self.max_speed=max_speed
  self.unit=unit

def __str__(self):
 return 'Car with the maximum speed of ' + str(self.max_speed) +' ' + str(self.unit)

class boat:
 def __init__(self,max_speed):
  self.max_speed=max_speed

 def __str__(self):
  return 'Boat with the maximum speed of ' +str(self.max_speed) + 'knots'

6)Fizzbuzz:-
==================
def fizzbuzz(n):
 for number in range(1,n+1):
   if number%3==0 and number%5==0:
     print('FizzBuzz')
        elif number % 3 == 0:
            print('Fizz')
        elif number % 5 == 0:
            print('Buzz')
        else:
            print(number)

7)
  